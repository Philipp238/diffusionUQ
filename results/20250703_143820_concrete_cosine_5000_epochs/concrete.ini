[META]
results_path = results/
data_path = data/
experiment_name = concrete
; only_validate = filename

[TRAININGPARAMETERS]
report_every = 50
seed = [1234]
model = 'MLP'
# 'diffusion', 'dropout', 'scoring-rule-dropout', 'scoring-rule-reparam', 'deep-ensemble', 'deterministic', 'laplace',
uncertainty_quantification = ['diffusion']
backbone = ["CARD"] # "default", "CARD"
batch_size = 64
eval_batch_size = 16384
n_epochs = [5000]
early_stopping = 1000
init = 'default' # he, xavier, default
learning_rate = 0.001
lr_schedule = 'no' # 'no', 'step'
optimizer = 'adam'
gradient_clipping = 1
; layer_normalization = True
data_loader_pin_memory = False
data_loader_num_workers = [0]
distributed_training = False
alpha = 0.05
n_samples_uq = 100
weight_decay = 0.0
### Model Parameters
dropout = [0.1]
; dropout = [0.1]
hidden_dim = [64]
n_layers = [2]
### Diffusion Parameters
n_timesteps = [50]
distributional_method = ["deterministic", "normal", "mixednormal", "sample"] # "deterministic", "normal" "sample" "mixednormal"
concat_condition_diffusion = True
evaluate = True
x_T_sampling_method = ["CARD"]  # "standard", "naive-regressor-mean", "CARD"
conditional_free_guidance_training=False
use_yarin_gal_loss=False
ddim_sigma = 1.0
noise_schedule = 'cosine' # 'linear', 'cosine'
regressor = "orig_CARD_pretrain"

[DATAPARAMETERS]
; housing_prices, x-squared, concrete, energy (do not choose currently, since it has 2 target variables), power
; UCI datasets: concrete, energy, power-plant, kin8nm, yacht, wine-quality-red, protein-tertiary-structure, naval-propulsion-plant
dataset_name = ['concrete']
yarin_gal_uci_split_indices = [0]
max_dataset_size = 1000
standardize = True
validation_ratio = 0.0