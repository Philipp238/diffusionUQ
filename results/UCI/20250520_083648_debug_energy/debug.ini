[META]
results_path = results/
data_path = data/
experiment_name = debug
; only_validate = filename

[TRAININGPARAMETERS]
report_every = 5
seed = [1234]
model = 'MLP'
# 'diffusion', 'dropout', 'scoring-rule-dropout', 'scoring-rule-reparam', 'deep-ensemble', 'deterministic', 'laplace', 
uncertainty_quantification = ['diffusion']  
batch_size =  [64]
eval_batch_size = 16384
n_epochs = 1000
early_stopping = 50
init = 'default' # he, xavier, default
learning_rate = 0.0001
lr_schedule = 'step' # 'no', 'step'
optimizer = 'adam'
gradient_clipping = 1
; layer_normalization = True
data_loader_pin_memory = False 
data_loader_num_workers = [0]
distributed_training = False
alpha = 0.05
n_samples_uq = 100
weight_decay = 0.0
### Model Parameters
dropout = [0.1]
; dropout = [0.1]
hidden_dim = [64]
n_layers = [2]
### Diffusion Parameters
distributional_method = ["mixednormal"] # "deterministic", "normal" "sample" "mixednormal"
concat_condition_diffusion = True
evaluate = True
# models/$path$ to folder with regressor weights and .ini file
; regressor = 'concrete/20250507_144839_debug_unstandardized' 
; regressor = 'housing_prices/20250507_150938_debug_unstandardized' 
; regressor = 'power/20250507_154432_debug_unstandardized' 
regressor = None#'power/20250507_160501_debug_standardized'

[DATAPARAMETERS]
; housing_prices, x-squared, concrete, energy (do not choose currently, since it has 2 target variables), power
dataset_name = ['energy'] # 'concrete', 'kin8nm'
yarin_gal_uci_split_indices = 0 # can be scalar, list of indices or None for selecting all splits. As of May only single split is implemented
max_dataset_size = 1000
standardize = True